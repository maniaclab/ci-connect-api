#%RAML 1.0
---
title: CIConnect API
baseUri: http://127.0.0.1:18080/{version}
version: v1alpha1

/users:
  post:
    description: Create a user
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      # only a superuser is authorized to create other users
      application/json:
        type: !include UserCreateRequestSchema.json
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include UserInfoResultSchema.json
      400: 
        description: Insufficient information
        body:
          application/json:
            type: !include ErrorResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
  /{user_ID}:
    get:
      # only the user or a superuser should be allowed to fetch a user's detailed info
      description: Get user's detailed information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        omit_groups:
          displayName: Omit group info
          description: Suppress fetching information about the user's group memberships
          required: false
      responses:
        200:
          description: Normal success
          body:
            application/json: 
              type: !include UserInfoResult.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404:
          description: User not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
    put:
      description: Update a user's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        # only a superuser is authorized to change a users's superuser status
        application/json:
          type: !include UserUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    delete:
      description: Remove a user
      # only the user in question of a superuser should be able to delete an account
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    /groups:
      get:
        description: List all of a user's group memberships
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include UserGroupsMembershipResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404: 
            description: User not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
    /group_requests:
      get:
        description: List all of a user's pending requests for groups to be created
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include GroupRequestListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404: 
            description: User not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
      /{group_name}:
        get:
          description: Get a user's membership status in a group
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
              body:
                application/json:
                  type: !include UserGroupMembershipResultSchema.json
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found, user not member of group
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        put:
          description: Change a user's membership status in a group
          # Allowed state transitions and required permissions
          #
          #                   D
          #             P     i
          #             e A   s
          #             n c A a
          #             d t d b
          #             i i m l
          #             n v i e
          #             g e n d
          #           +---------
          # Nonmember | s g g x
          #   Pending | - g g x
          #    Active | x - g G
          #     Admin | x g - G
          #  Disabled | x p p -
          #
          # -: No-op
          # x: Forbidden
          # s: Self, group admin, or enclosing group admin
          # g: Group admin
          # G: Group or enclosing group admin
          # p: Admin of whichever group set disabled status
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include UserGroupMembershipUpdateRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        delete:
          description: Remove a user from a group
          # Implicitly removes the user from all subgroups on success
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found, user not member of group
              body:
                application/json:
                  type: !include ErrorResultSchema.json
    /replace_token:
      get:
        description: Revoke old access token and issue a new one
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Updated credentials for the user
            body:
              application/json: !include FindUserResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: User not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "User not found"
                  }
    /update_last_use_time:
      put:
        description: Set the user's last use time to the current time
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Updated user's last use time
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: User not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "User not found"
                  }
    /attributes:
      /{attribute_name}:
        get:
          description: Get an extra attribute of a user
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
              body:
                application/json:
                  type: !include UserAttributeResultSchema.json
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User or attribute not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        put:
          description: Set an extra attribute of a user
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include UserAttributeStoreRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        delete:
          description: Remove an extra attribute of a user
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User or attribute not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
/find_user:
  get:
    description: Look up a user account by globus ID
    # only superusers are permitted to use this request
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      globus_id:
        displayName: Globus ID
        type: string
        description: User's globus UUID
        required: true
    responses:
      200:
        description: Credentials for the relevent user
        body:
          application/json: !include FindUserResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
      404:
        description: User not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
/check_unix_name:
  get:
    description: Check whether the sepcified unix name is already in use by a user
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      unix_name:
        displayName: Unix Name
        type: string
        description: Unix user name
        required: true
    responses:
      200:
        description: Credentials for the relevent user
        body:
          application/json: !include CheckUnixNameResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
      404:
        description: User not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
/groups:
  get:
    description: List all groups
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include GroupListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
  /{group_name}:
    get:
      description: Get information about a group
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
          body:
            application/json:
              type: !include GroupInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Group not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    put:
      description: Update a group's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        application/json:
          type: !include GroupUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Group not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    delete:
      description: Destroy a group
      # admins of a group or the directly enclosing group can destroy it
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Group not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    /members:
      get:
        description: List all of a group's members
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include GroupUsersMembershipResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404: 
            description: User not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
      /{user_ID}:
        get:
          description: Get a user's membership status in a group
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
              body:
                application/json:
                  type: !include GroupUserMembershipResultSchema.json
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found, user not member of group
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        put:
          description: Change a user's membership status in a group
          # Allowed state transitions and required permissions
          #
          #                   D
          #             P     i
          #             e A   s
          #             n c A a
          #             d t d b
          #             i i m l
          #             n v i e
          #             g e n d
          #           +---------
          # Nonmember | s g g x
          #   Pending | - g g x
          #    Active | x - g G
          #     Admin | x g - G
          #  Disabled | x p p -
          #
          # -: No-op
          # x: Forbidden
          # s: Self, group admin, or enclosing group admin
          # g: Group admin
          # G: Group or enclosing group admin
          # p: Admin of whichever group set disabled status
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include UserGroupMembershipUpdateRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        delete:
          description: Remove a user from a group
          # Implicitly removes the user from all subgroups on success
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include UserJoinRequestDenialSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: User not found, group not found, user not member of group
              body:
                application/json:
                  type: !include ErrorResultSchema.json
    /subgroups:
      get:
        description: List a group's subgroups
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include GroupListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404: 
            description: User not found, group not found, user not member of group
            body:
              application/json:
                type: !include ErrorResultSchema.json
      /{group_name}:
        put:
          description: Create a group
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include GroupCreateRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description:Parent group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
    /subgroup_requests:
      get:
        description: List a group's requested subgroups
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include GroupRequestListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404: 
            description: User not found, group not found, user not member of group
            body:
              application/json:
                type: !include ErrorResultSchema.json
      /{group_name}:
        put:
          description: Request creation of a subgroup
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include GroupCreateRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description:Parent group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        delete:
          description: Deny a subgroup creation request
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include GroupRequestDenialSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description:Parent group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        /approve:
          put:
            description: Approve the creation of a requested subgroup
            queryParameters:
              token:
                displayName: Access Token
                type: string
                description: User's authentication token
                required: true
            body:
              application/json:
                type: !include GroupCreateRequestSchema.json
            responses:
              200:
                description: Success
              403:
                description: Authentication/authorization error
                body:
                  application/json:
                    type: !include ErrorResultSchema.json
              404: 
                description:Parent group not found
                body:
                  application/json:
                    type: !include ErrorResultSchema.json
    /attributes:
      /{attribute_name}:
        get:
          description: Get an extra attribute of a group
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
              body:
                application/json:
                  type: !include GroupAttributeResultSchema.json
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: Group or attribute not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        put:
          description: Set an extra attribute of a group
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          body:
            application/json:
              type: !include GroupAttributeStoreRequestSchema.json
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: Group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
        delete:
          description: Remove an extra attribute of a group
          # admins of a group or the directly enclosing group can destroy it
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
            404: 
              description: Group or attribute not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
/fields_of_science:
  get:
    description: List of all accepted fields of science
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include FieldListResultSchema.json
/multiplex:
  post:
    description: Execute multiple requests concurrently
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include MultiplexRequestSchema.json
    responses:
      200:
        decsription: Success
        body:
          application/json: !include MultiplexResultSchema.json
      400:
        description: Invalid input
        body:
          application/json:
            type: !include ErrorResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
