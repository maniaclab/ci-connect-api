#%RAML 1.0
---
title: CIConnect API
baseUri: http://127.0.0.1:18080/{version}
version: v1alpha1

/users:
  post:
    description: Create a user
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      # only a superuser is authorized to create other users
      application/json:
        type: !include UserCreateRequestSchema.json
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include UserInfoResultSchema.json
      400: 
        description: Insufficient information
        body:
          application/json:
            type: !include ErrorResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
  /{user_ID}:
    get:
      # only the user or a superuser should be allowed to fetch a user's detailed info
      description: Get user's detailed information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json: 
              type: !include UserInfoResult.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404:
          description: User not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
    put:
      description: Update a user's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        # only a superuser is authorized to change a users's superuser status
        application/json:
          type: !include UserUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    delete:
      description: Remove a user
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    /memberships:
      get:
      /{group_name}:
        get:
        put:
        delete:
/find_user:
  get:
    description: Look up a user account by globus ID
    # only superusers are permitted to use this request
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      globus_id:
        displayName: Globus ID
        type: string
        description: User's globus UUID
        required: true
    responses:
      200:
        description: Credentials for the relevent user
        body:
          application/json: !include FindUserResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
      404:
        description: User not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
/groups:
  /{group_name}:
    get:
    put:
    delete:
    /members:
      get:
      /{user_ID}:
        get:
        put:
        delete:
    /subgroups:
      get:
      put:
/multiplex:
  post:
    description: Execute multiple requests concurrently
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include MultiplexRequestSchema.json
    responses:
      200:
        decsription: Success
        body:
          application/json: !include MultiplexResultSchema.json
      400:
        description: Invalid input
        body:
          application/json:
            type: !include ErrorResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
